---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: synthesizers.eno.azure.io
spec:
  group: eno.azure.io
  names:
    kind: Synthesizer
    listKind: SynthesizerList
    plural: synthesizers
    singular: synthesizer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Image
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: "Synthesizers are any process that can run in a Kubernetes container
          that implements the [KRM Functions Specification](https://github.com/kubernetes-sigs/kustomize/blob/master/cmd/config/docs/api-conventions/functions-spec.md).\n\n\nSynthesizer
          processes are given some metadata about the composition they are synthesizing,
          and are expected\nto return a set of Kubernetes resources. Essentially they
          generate the desired state for a set of Kubernetes resources.\n\n\nA special
          resource can be returned from synthesizers: `eno.azure.io/v1.Patch`.\nExample:\n\n\n```yaml\n\n\n\t
          # - Nothing will happen if the resource doesn't exist\n\t # - Patches are
          only applied when they would result in a change\n\t # - Deleting the Patch
          will not delete the referenced resource\n\t\tapiVersion: eno.azure.io/v1\n\t\tkind:
          Patch\n\t\tmetadata:\n\t\t\tname: resource-to-be-patched\n\t\t\tnamespace:
          default\n\t\tpatch:\n\t\t\tapiVersion: v1\n\t\t\tkind: ConfigMap\n\t\t\tops:
          # standard jsonpatch operations\n\t\t\t  - { \"op\": \"add\", \"path\":
          \"/data/hello\", \"value\": \"world\" }\n\t\t\t  - { \"op\": \"add\", \"path\":
          \"/metadata/deletionTimestamp\", \"value\": \"anything\" } # setting any
          deletion timestamp will delete the resource\n\n\n```"
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              command:
                default:
                - synthesize
                description: Copied opaquely into the container's command property.
                items:
                  type: string
                type: array
              execTimeout:
                default: 10s
                description: Timeout for each execution of the synthesizer command.
                type: string
              image:
                description: Copied opaquely into the container's image property.
                type: string
              podTimeout:
                default: 2m
                description: |-
                  Pods are recreated after they've existed for at least the pod timeout interval.
                  This helps close the loop in failure modes where a pod may be considered ready but not actually able to run.
                type: string
              reconcileInterval:
                description: |-
                  Synthesized resources can optionally be reconciled at a given interval.
                  Per-resource jitter will be applied to avoid spikes in request rate.
                type: string
              refs:
                description: |-
                  Refs define the Synthesizer's input schema without binding it to specific
                  resources.
                items:
                  description: |-
                    Ref defines a synthesizer input.
                    Inputs are typed using the Kubernetes API - they are just normal Kubernetes resources.
                    The consumer (synthesizer) specifies the resource's kind/group,
                    while the producer (composition) specifies a specific resource name/namespace.


                    Compositions that use the synthesizer will be re-synthesized when the resource bound to this ref changes.
                    Re-synthesis happens automatically while honoring the globally configured cooldown period.
                  properties:
                    defer:
                      description: |-
                        Allows control over re-synthesis when inputs changed.
                        A non-deferred input will trigger a synthesis immediately, whereas a
                        deferred input will respect the cooldown period.
                      type: boolean
                    key:
                      description: Key corresponds to bindings to this ref.
                      type: string
                    resource:
                      description: A reference to a resource kind/group.
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                      required:
                      - kind
                      type: object
                  required:
                  - key
                  - resource
                  type: object
                type: array
            type: object
            x-kubernetes-validations:
            - message: podTimeout must be greater than execTimeout
              rule: duration(self.execTimeout) <= duration(self.podTimeout)
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
